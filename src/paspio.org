#+TITLE:       paspio
#+description: paspio's home page - password entropy calculator and library
#+property:    header-args:sh :exports both
#+options:     toc:t num:t

paspio implements the standard formula which dictates the level of
entropy of a set of symbols. [[https://en.wikipedia.org/wiki/Password_strength#Entropy_as_a_measure_of_password_strength][Entropy]] is a way of measuring the
unpredictability of a password against brute force attacks, in terms
of bits.

- Repository: <https://sr.ht/~grtcdr/paspio>
- API documentation: <[[https://docs.rs/paspio/latest/paspio]]>

* Installation

** Installing the library in your own project

Add the following to your project's =Cargo.toml= file:

#+begin_src toml
paspio = "0.3"
#+end_src

** Installing the command-line utility

- Cargo:

#+begin_src sh
cargo install paspio
#+end_src

#+RESULTS:

- Arch User Repositories:

#+begin_src sh
git clone https://aur.archlinux.org/paspio-git.git
cd paspio-git
makepkg -si
#+end_src

** Building the project from source

#+begin_src sh
git clone https://git.sr.ht/~grtcdr/paspio
cd paspio
cargo build --release
#+end_src

* Usage

This section illustrates a few examples of what it is like to use
=paspio= in the shell and how it integrates with other security tools.

** Generating a password with =pwgen= and verifying its entropy:

#+begin_src sh :results output :type list
password=$(pwgen -sync 24 1)
entropy=$(paspio "$password")
echo "${password} - ${entropy}"
#+end_src

#+RESULTS:
: gx|jk4+16`,OLfr<(Z(kx9jS - 157.31 bits

** Parsing the password entropy from a set of passwords

Here's our set:

#+name: passwords
| Passwords                  |
|----------------------------|
| passw0rd                   |
| as0nahKainj                |
| 9fjxQvHuWTA5opx9r2i        |
| -eW!v8y3bmwLbs_(Exf5Xs4!&r |

Return the entropy of the individual passwords:

#+begin_src sh :results output table :var set=passwords :hlines yes :colnames '("Password" "Entropy")
for password in $set; do
 entropy=$(paspio "$password")
 echo "${password} ${entropy}" | awk '{ print $1, $2 }'
done
#+end_src

#+RESULTS:
| Password                   | Entropy |
|----------------------------+---------|
| passw0rd                   |   41.36 |
| as0nahKainj                |    65.5 |
| 9fjxQvHuWTA5opx9r2i        |  113.13 |
| -eW!v8y3bmwLbs_(Exf5Xs4!&r |  170.42 |

** Analyzing the difference in entropy between a set of passwords

#+begin_src sh :results output :type list
weaker_password=$(pwgen 8)
stronger_password=$(pwgen -sync 16)

weaker_password_entropy=$(paspio $weaker_password)
stronger_password_entropy=$(paspio $stronger_password)

echo "${weaker_password} is ${weaker_password_entropy}"
echo "${stronger_password} is ${stronger_password_entropy}"
#+end_src

#+RESULTS:
: Loosh7ko is 47.63 bits
: JhB#>xqF8[MTmnqn is 104.87 bits

That's all you need to know.
